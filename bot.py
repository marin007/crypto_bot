import logging
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv

# –ó–∞—Ä–µ–∂–¥–∞–º–µ .env —Ñ–∞–π–ª
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CRYPTO_SYMBOL = "BTC"

# –õ–æ–≥–≤–∞–Ω–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–¥—Ä–∞–≤–µ–π! –ê–∑ —Å—ä–º —Ç–≤–æ—è—Ç Crypto Alert Bot üöÄ")

async def price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    price = get_crypto_price(CRYPTO_SYMBOL)
    await update.message.reply_text(f"–¢–µ–∫—É—â–∞ —Ü–µ–Ω–∞ –Ω–∞ {CRYPTO_SYMBOL}: ${price}")

def get_crypto_price(symbol="BTC"):
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={symbol.lower()}&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    return data[symbol.lower()]["usd"]

if __name__ == "__main__":
    # –°—Ç–∞—Ä—Ç –Ω–∞ –Ω–æ–≤–∏—è ApplicationBuilder API
    app = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∫–æ–º–∞–Ω–¥–∏—Ç–µ
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("price", price))

    # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞
    app.run_polling()
